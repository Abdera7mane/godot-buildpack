name: Publish buildpack image to the registry

on:
  release:
    types:
      - published

jobs:
  register:
    name: Package, Publish, and Register
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        uses: actions/checkout@v3

      - if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASS }}
        
      - name: Setup pack
        uses: buildpacks/github-actions/setup-pack@v4.8.1

      - name: Install musl-tools
        run: sudo apt-get install musl-tools --no-install-recommends

      - name: Update Rust toolchain
        run: rustup update

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.0.0

      - name: Install libcnb framework
        run: cargo install libcnb-cargo
      
      - name: Install Rust linux-musl target
        run: rustup target add x86_64-unknown-linux-musl
      
      - name: Package buildpack
        run: cargo libcnb package --release

      - id: package
        run: |
          #!/usr/bin/env bash

          set -euo pipefail
          
          BP_ID="$(cat buildpack.toml | yj -t | jq -r .buildpack.id)"
          ESCAPED_ID="$(echo "$BP_ID" | sed 's/\//_/g')"
          VERSION="$(cat buildpack.toml | yj -t | jq -r .buildpack.version)"
          PACKAGE="${REPO}/$(echo "$BP_ID" | sed 's/\//_/g')"
          
          pack buildpack package --publish --path "target/buildpack/release/$ESCAPED_ID" ${PACKAGE}:${VERSION}
          pack buildpack package --format file --path "target/buildpack/release/$ESCAPED_ID" ${ESCAPED_ID}_${VERSION}.cnb

          DIGEST="$(crane digest ${PACKAGE}:${VERSION})"

          echo "::set-output name=bp_id::$BP_ID"
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=tag_name::v${VERSION}"
          echo "::set-output name=address::${PACKAGE}@${DIGEST}"  
          echo "::set-output name=package::${ESCAPED_ID}_${VERSION}.cnb"
        
        shell: bash
        env:
          REPO: docker.io/${{ secrets.DOCKER_HUB_USER }}
        
      - id: register
        uses: docker://ghcr.io/buildpacks/actions/registry/request-add-entry:4.8.1
        with:
          token:   ${{ secrets.PUBLIC_REPO_TOKEN }}
          id:      ${{ steps.package.outputs.bp_id }}
          version: ${{ steps.package.outputs.version }}
          address: ${{ steps.package.outputs.address }}
        
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.package.outputs.tag_name }}
          files: ${{ steps.package.outputs.package }}
