#!/usr/bin/env bash

BP_DIR=$(dirname $(dirname "$0"))
BUILD_DIR=$1
CACHE_DIR=$2


APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"

source $BP_DIR/func/setup

export_env_dir() {
	env_dir=$1
	whitelist_regex=${2:-''}
	blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|JAVA_OPTS)$'}
	if [ -d "$env_dir" ]; then
		for e in $(ls $env_dir); do
			echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
			export "$e=$(cat $env_dir/$e)"
			:
		done
	fi
}

export_env_dir $3

if [ -z "$NGROK_API_TOKEN" ]; then
  echo "You must set the NGROK_API_TOKEN config var to create a TCP tunnel!"
  exit 1
fi

if [ -z "$SERVER_PORT" ]; then
	echo "SERVER_PORT is missing, defaulting to 3000"
	export SERVER_PORT=3000
fi

mkdir -p $BUILD_DIR/func

#Install ngrok
echo "Installing ngrok"
curl --silent -o ngrok.zip -L "https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip"
unzip ngrok.zip -d $BUILD_DIR/bin > /dev/null 2>&1
echo "ngrok finnished isntalling"
echo ""

echo "exporting paths"
cat <<EOF >$BUILD_DIR/.profile.d/000_apt.sh
export PATH="\$HOME/.apt/usr/bin:\$PATH"
export LD_LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LD_LIBRARY_PATH"
export LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LIBRARY_PATH"
export INCLUDE_PATH="\$HOME/.apt/usr/include:\$INCLUDE_PATH"
export CPATH="\$INCLUDE_PATH"
export CPPPATH="\$INCLUDE_PATH"
export PKG_CONFIG_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/i386-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/pkgconfig:\$PKG_CONFIG_PATH"
export PYTHONPATH="\$HOME/.apt/usr/lib/python2.7/dist-packages"
export SCREENDIR="\$HOME/.apt/var/run/screen"
EOF
echo "screen finnished isntalling"
echo ""

for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  dpkg -x $DEB $BUILD_DIR/.apt/
done

cp $BP_DIR/func/start $BUILD_DIR/func/start
cp $BP_DIR/func/ngrok $BUILD_DIR/func/ngrok

chmod +x $BUILD_DIR/func/start
chmod +x $BUILD_DIR/func/ngrok

get_godot_server $GODOT_VERSION